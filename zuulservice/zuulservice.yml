# Svaki mikroservis treba da sadrzi bootstrap.yml fajl unutar svog src/main/resources foldera.
# Eureka server svaki mikroservis registruje na osnovu dva atributa : ID aplikacije i ID instance.
# Svaki mikroservis, u svom bootstrap.yml fajlu, unosi svoj ID aplikacije, odnosno ime, na osnovu kojeg ga Eureka server identifikuje. 
# Primer sadrzaja fajla (bootstrap.yml) za servis koji bi radio slanje poruka npr :
# 	spring:
#  		application:
#			name: messagingservice
# Kada se taj fajl kreira, neophodno ga je registrovati unutar ovog fajla (zuulservice->application.yml) kako bi on znao mapiranje putanja na mikroservis.
# Primer kako bi se radilo mapiranje poruka, ukoliko se mikroservis nazove messagingservice, a njemu se pristupa preko URL-ova koji sadrze /chat/** :
# zuul:
#	routes:
#		messagingservice: /chat/**

server:
  port: 5555

logging:
    level:
      com.netflix: WARN
      org.springframework.web: WARN
      com.megatravel: DEBUG

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
        defaultZone: http://localhost:8761/eureka/

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

zuul:
  sensitiveHeaders: Cookie, Set-Cookie
  ignored-services: stefanservice, demoservice, converterservice, loginAndRegistration, front, demosarservice, search, MessagingService
  prefix:  /api
  host:
    socket-timeout-millis: 30000
  routes:
    demoservice: /demo/**
    stefanservice: /stefanPutanja/**
    loginAndRegistration: /login/**
    converterservice: /convert/**
    front: /front/**
    search: /search/**
    MessagingService: /message/**
    demosarservice:
      path: /demosoapandrest/**
      stripPrefix: false
